{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "neeraj-df"
		},
		"AmazonS31_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'AmazonS31'"
		},
		"AzureBlobStorage1_servicePrincipalCredential": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalCredential' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_servicePrincipalCredential": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalCredential' of 'AzureBlobStorage2'"
		},
		"AzureBlobStorageDE_servicePrincipalCredential": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalCredential' of 'AzureBlobStorageDE'"
		},
		"GoogleCloudStorage1_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'GoogleCloudStorage1'"
		},
		"Microsoft3651_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'Microsoft3651'"
		},
		"Sftp1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Sftp1'"
		},
		"AmazonS31_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIAYE64OKLXURKJEFX6"
		},
		"AzureBlobStorage1_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://nextthink0neeraj.blob.core.windows.net/"
		},
		"AzureBlobStorage1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "9636baf2-1763-480c-8bb3-5689803dbf04"
		},
		"AzureBlobStorage1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "4c982686-df24-431a-aaa8-54f66276ba46"
		},
		"AzureBlobStorage2_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://nextthink0neeraj.blob.core.windows.net/"
		},
		"AzureBlobStorage2_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "9636baf2-1763-480c-8bb3-5689803dbf04"
		},
		"AzureBlobStorage2_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "4c982686-df24-431a-aaa8-54f66276ba46"
		},
		"AzureBlobStorageDE_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://storagedeneeraj.blob.core.windows.net/"
		},
		"AzureBlobStorageDE_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "9636baf2-1763-480c-8bb3-5689803dbf04"
		},
		"AzureBlobStorageDE_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "4c982686-df24-431a-aaa8-54f66276ba46"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://secret-test-account.vault.azure.net/"
		},
		"GoogleCloudStorage1_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "GOOG1EHJSIQKV4UEKNTGU3R2D27PXDT3J4ON3K3P4CCELWCCYHSQCVKXYOSKR"
		},
		"Microsoft3651_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "4c982686-df24-431a-aaa8-54f66276ba46"
		},
		"Sftp1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "test.rebex.net"
		},
		"Sftp1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "demo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AmazonS31')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "https://s3.amazonaws.com",
					"accessKeyId": "[parameters('AmazonS31_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('AmazonS31_secretAccessKey')]"
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorage1_properties_typeProperties_serviceEndpoint')]",
					"tenant": "[parameters('AzureBlobStorage1_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureBlobStorage1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "SecureString",
						"value": "[parameters('AzureBlobStorage1_servicePrincipalCredential')]"
					},
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorage2_properties_typeProperties_serviceEndpoint')]",
					"tenant": "[parameters('AzureBlobStorage2_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureBlobStorage2_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "SecureString",
						"value": "[parameters('AzureBlobStorage2_servicePrincipalCredential')]"
					},
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageDE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorageDE_properties_typeProperties_serviceEndpoint')]",
					"tenant": "[parameters('AzureBlobStorageDE_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureBlobStorageDE_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "SecureString",
						"value": "[parameters('AzureBlobStorageDE_servicePrincipalCredential')]"
					},
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleCloudStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "GoogleCloudStorage",
				"typeProperties": {
					"serviceUrl": "https://storage.googleapis.com",
					"accessKeyId": "[parameters('GoogleCloudStorage1_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('GoogleCloudStorage1_secretAccessKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Microsoft3651')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Office365",
				"typeProperties": {
					"office365TenantId": "9636baf2-1763-480c-8bb3-5689803dbf04",
					"servicePrincipalTenantId": "9636baf2-1763-480c-8bb3-5689803dbf04",
					"servicePrincipalId": "[parameters('Microsoft3651_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('Microsoft3651_servicePrincipalKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp1_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_Blob_Store')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destinations"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "testblob1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_S3_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AmazonS31",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": "neeraj-private-bucket"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AmazonS31')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_Sftp_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sftp1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sources"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": "/pub/example"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sftp1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_blobstore_with_Principal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destinations"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "testblob1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Delimited_linked_line')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GoogleCloudStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "GoogleCloudStorageLocation",
						"bucketName": "neeraj_private_bucket",
						"folderPath": "dilimited_files",
						"fileName": "sample_document.csv"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "eruid",
						"type": "String"
					},
					{
						"name": "description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GoogleCloudStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Delimitedfile_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageDE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "blobcontainer-de"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageDE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Microsoft365Table1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Microsoft3651",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sources"
				},
				"annotations": [],
				"type": "Office365Table",
				"schema": [],
				"typeProperties": {
					"tableName": "BasicDataSet_v0.Contact_v1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Microsoft3651')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Google_cloud')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GoogleCloudStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sources"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "GoogleCloudStorageLocation",
						"bucketName": "neeraj_private_bucket"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GoogleCloudStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_blobstorage_de2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageDE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destinations"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "blobcontainer-de"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageDE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storageaccount_neerajstorage_blobstore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageDE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destinations"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "blobcontainer-de"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageDE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_MS365_contacts_to_Blobstore')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from MS365 to Azure BlobStore",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "Office365Source",
								"outputColumns": [
									{
										"name": "assistantName"
									},
									{
										"name": "birthday"
									},
									{
										"name": "businessAddress"
									},
									{
										"name": "businessHomePage"
									},
									{
										"name": "businessPhones"
									},
									{
										"name": "categories"
									},
									{
										"name": "changeKey"
									},
									{
										"name": "children"
									},
									{
										"name": "companyName"
									},
									{
										"name": "createdDateTime"
									},
									{
										"name": "department"
									},
									{
										"name": "displayName"
									},
									{
										"name": "emailAddresses"
									},
									{
										"name": "fileAs"
									},
									{
										"name": "generation"
									},
									{
										"name": "givenName"
									},
									{
										"name": "homeAddress"
									},
									{
										"name": "homePhones"
									},
									{
										"name": "id"
									},
									{
										"name": "imAddresses"
									},
									{
										"name": "initials"
									},
									{
										"name": "jobTitle"
									},
									{
										"name": "lastModifiedDateTime"
									},
									{
										"name": "manager"
									},
									{
										"name": "middleName"
									},
									{
										"name": "mobilePhone"
									},
									{
										"name": "nickName"
									},
									{
										"name": "officeLocation"
									},
									{
										"name": "otherAddress"
									},
									{
										"name": "parentFolderId"
									},
									{
										"name": "personalNotes"
									},
									{
										"name": "profession"
									},
									{
										"name": "spouseName"
									},
									{
										"name": "surname"
									},
									{
										"name": "title"
									},
									{
										"name": "yomiCompanyName"
									},
									{
										"name": "yomiGivenName"
									},
									{
										"name": "yomiSurname"
									}
								]
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Microsoft365Table1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "storageaccount_neerajstorage_blobstore",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-12-09T14:53:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Microsoft365Table1')]",
				"[concat(variables('factoryId'), '/datasets/storageaccount_neerajstorage_blobstore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_google_cloud_storage_toazure_blobstore')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy binary data between google_cloud and azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "GoogleCloudStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_Google_cloud",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azure_blobstorage_de2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-12-11T14:40:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_Google_cloud')]",
				"[concat(variables('factoryId'), '/datasets/azure_blobstorage_de2')]"
			]
		}
	]
}